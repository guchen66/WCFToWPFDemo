//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPF接收Xml.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/WCF%E5%8F%91%E9%80%81Xml")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IStudent")]
    public interface IStudent {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetName", ReplyAction="http://tempuri.org/IStudent/GetNameResponse")]
        string GetName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetName", ReplyAction="http://tempuri.org/IStudent/GetNameResponse")]
        System.Threading.Tasks.Task<string> GetNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetModel", ReplyAction="http://tempuri.org/IStudent/GetModelResponse")]
        WPF接收Xml.ServiceReference.Student GetModel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetModel", ReplyAction="http://tempuri.org/IStudent/GetModelResponse")]
        System.Threading.Tasks.Task<WPF接收Xml.ServiceReference.Student> GetModelAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetStudentsFromXml", ReplyAction="http://tempuri.org/IStudent/GetStudentsFromXmlResponse")]
        WPF接收Xml.ServiceReference.Student[] GetStudentsFromXml();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudent/GetStudentsFromXml", ReplyAction="http://tempuri.org/IStudent/GetStudentsFromXmlResponse")]
        System.Threading.Tasks.Task<WPF接收Xml.ServiceReference.Student[]> GetStudentsFromXmlAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentChannel : WPF接收Xml.ServiceReference.IStudent, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentClient : System.ServiceModel.ClientBase<WPF接收Xml.ServiceReference.IStudent>, WPF接收Xml.ServiceReference.IStudent {
        
        public StudentClient() {
        }
        
        public StudentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetName() {
            return base.Channel.GetName();
        }
        
        public System.Threading.Tasks.Task<string> GetNameAsync() {
            return base.Channel.GetNameAsync();
        }
        
        public WPF接收Xml.ServiceReference.Student GetModel() {
            return base.Channel.GetModel();
        }
        
        public System.Threading.Tasks.Task<WPF接收Xml.ServiceReference.Student> GetModelAsync() {
            return base.Channel.GetModelAsync();
        }
        
        public WPF接收Xml.ServiceReference.Student[] GetStudentsFromXml() {
            return base.Channel.GetStudentsFromXml();
        }
        
        public System.Threading.Tasks.Task<WPF接收Xml.ServiceReference.Student[]> GetStudentsFromXmlAsync() {
            return base.Channel.GetStudentsFromXmlAsync();
        }
    }
}
